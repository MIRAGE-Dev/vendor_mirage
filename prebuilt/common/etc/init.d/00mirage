#!/system/bin/ash
#!/system/bin/sh

. /system/etc/liberty.bsh

mount -o remount,rw,noatime,nodiratime /system

# Always zipalign
ZIP_LOG_FILE=/data/zipalign.log;
ZIPALIGNED_APK=/data/zipalig.db;

if [ -e $ZIP_LOG_FILE ]; then
	rm $ZIP_LOG_FILE;
fi;

touch $ZIP_LOG_FILE

if [ ! -f $ZIPALIGNED_APK ]; then
	touch $ZIPALIGNED_APK;
fi;

echo "Automatic ZipAlign started at $( date +"%m-%d-%Y %H:%M:%S" ) " | tee -a $ZIP_LOG_FILE;

for DIR in /system/app /data/app; do
	cd $DIR;
	for APK in *.apk; do
		if [ $APK -ot $ZIPALIGNED_APK ] && [ $(grep "$DIR/$APK" $ZIPALIGNED_APK|wc -l) -gt 0 ]; then
			echo "Already checked: $DIR/$APK" | tee -a $ZIP_LOG_FILE;
			if [ -e /data/$APK ]; then
				rm /data/$APK;
				echo "Temporary APK removed: /data/$APK" | tee -a $ZIP_LOG_FILE;
			fi;
		else
			ZIPCHECK=`/system/bin/armzipalign -c -v 4 $APK | grep FAILED | wc -l`;
			if [ $ZIPCHECK == "1" ]; then
				echo "Now aligning: $DIR/$APK" | tee -a $ZIP_LOG_FILE;
				/system/xbin/zipalign -v -f 4 $APK /data/$APK;
				sync
				cp -f -p /data/$APK $APK;
				rm /data/$APK;
				if [ -e /data/$APK ]; then
					rm /data/$APK;
					if [ -e /data/$APK ]; then
						echo "Failed to remove APK. Run the tweak again : /data/$APK" | tee -a $ZIP_LOG_FILE;
					else
						echo "Temporary APK removed: /data/$APK" | tee -a $ZIP_LOG_FILE;
					fi;
				fi;
				grep "$DIR/$APK" $ZIPALIGNED_APK > /dev/null || echo $DIR/$APK >> $ZIPALIGNED_APK;
			else
				echo "Already aligned: $DIR/$APK" | tee -a $ZIP_LOG_FILE;
				if [ -e /data/$APK ]; then
					rm /data/$APK;
					echo "Temporary APK removed: /data/$APK" | tee -a $ZIP_LOG_FILE;
				fi;
				grep "$DIR/$APK" $ZIPALIGNED_APK > /dev/null || echo $DIR/$APK >> $ZIPALIGNED_APK;
			fi;
		fi;
	done;
done;
sync

# Enable Syscntl
if [ -e "/system/etc/sysctl.conf" ]; then
  sysctl -p /system/etc/sysctl.conf
fi

# Fix Permissions
fix_permissions

# Enable Cron
# crond has "/bin/sh" hardcoded
mount -o remount,rw rootfs /
if busybox [ ! -L /bin ]; then
    ln -s /system/bin/ /bin
fi
mount -o remount,ro rootfs /

# set timezone (if you're not between -0500 and -0800 you get PST)
# todo - support other timezones
timezone=`date +%z`
if busybox [ $timezone = "-0800" ]; then
    TZ=PST8PDT
elif busybox [ $timezone = "-0700" ]; then
    TZ=MST7MDT
elif busybox [ $timezone = "-0600" ]; then
    TZ=CST6CDT
elif busybox [ $timezone = "-0500" ]; then
    TZ=EST5EDT
else
    TZ=PST8PDT
fi
export TZ

# use /data/cron, call the crontab file "root"
if busybox [ ! -d /data/cron ]; then
    busybox mkdir -p /data/cron
    cat > /data/cron/root << EOF
# run-parts
01 * * * * busybox run-parts /system/etc/cron/cron.hourly
02 4 * * * busybox run-parts /system/etc/cron/cron.daily
03 4 * * 0 busybox run-parts /system/etc/cron/cron.weekly
EOF
fi
busybox crond -c /data/cron

mount -o remount,rw rootfs /

# Read Ahead
if [ -e "/sys/devices/virtual/bdi/179:0/read_ahead_kb" ]; then
        echo "1024" > /sys/devices/virtual/bdi/179:0/read_ahead_kb;
fi

# etc
busybox echo "0" > /proc/sys/net/ipv6/conf/all/forwarding
busybox echo "0" > /proc/sys/net/ipv4/tcp_timestamps
busybox echo "1" > /proc/sys/net/ipv4/tcp_no_metrics_save
busybox echo "1" > /proc/sys/net/ipv4/tcp_tw_reuse;
busybox echo "1" > /proc/sys/net/ipv4/tcp_sack;
busybox echo "1" > /proc/sys/net/ipv4/tcp_tw_recycle;
busybox echo "1" > /proc/sys/net/ipv4/tcp_window_scaling;
busybox echo "5" > /proc/sys/net/ipv4/tcp_keepalive_probes;
busybox echo "30" > /proc/sys/net/ipv4/tcp_keepalive_intvl;
echo "10" > /proc/sys/fs/lease-break-time

# VM
echo "2500" > /proc/sys/vm/dirty_expire_centisecs;
echo "300" > /proc/sys/vm/dirty_writeback_centisecs;
echo "8192" > /proc/sys/vm/min_free_kbytes;
echo "1" > /proc/sys/vm/oom_kill_allocating_task;
echo "0" > /proc/sys/vm/panic_on_oom;
echo "70" > /proc/sys/vm/dirty_background_ratio;
echo "90" > /proc/sys/vm/dirty_ratio;
echo "5" > /proc/sys/vm/vfs_cache_pressure;
echo "0" > /proc/sys/vm/overcommit_memory;
echo "4" > /proc/sys/vm/min_free_order_shift;
echo "0" > /proc/sys/vm/laptop_mode;
echo "0" > /proc/sys/vm/block_dump;
echo "0" > /proc/sys/vm/oom_dump_tasks;
echo "3" > /proc/sys/vm/drop_caches;

mount -o remount,ro rootfs /
mount -o remount,ro,noatime,nodiratime /system
